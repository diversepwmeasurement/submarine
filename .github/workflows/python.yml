env:
  KUBERNETES_VERSION: v1.25.3
jobs:
  check-style:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Install dependencies
      run: 'pip install --upgrade pip setuptools wheel

        pip install -r ./dev-support/style-check/python/lint-requirements.txt

        pip install -r ./dev-support/style-check/python/mypy-requirements.txt

        '
    - continue-on-error: true
      name: List installed packages
      run: pip list
    - continue-on-error: true
      name: Check python sdk code style
      run: ./dev-support/style-check/python/lint.sh
    timeout-minutes: 30
  integration:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Free Disk Space
      run: bash ./.github/scripts/free-disk-space.sh
    - continue-on-error: true
      name: Setup python environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - continue-on-error: true
      name: Install tf2 dependencies
      run: 'pip install --upgrade pip setuptools wheel

        sed -i "s/tensorflow>=2.12.0,<2.15.0/tensorflow~=${{ matrix.tf-version }}/"
        ./submarine-sdk/pysubmarine/setup.py

        sed -i "s/tensorflow-estimator>=2.12.0,<2.15.0/tensorflow-estimator~=${{ matrix.tf-version
        }}/" ./submarine-sdk/pysubmarine/setup.py

        pip install --no-cache-dir -e ./submarine-sdk/pysubmarine/.[tf2,pytorch]

        pip install -r ./submarine-sdk/pysubmarine/github-actions/test-requirements.txt

        pip cache purge

        '
    - continue-on-error: true
      name: List installed packages
      run: pip list
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        '
    - continue-on-error: true
      name: Create kind cluster
      run: kind create cluster --config ./.github/config/kind-config-kind.yaml --wait
        3m --image kindest/node:${KUBERNETES_VERSION}
    - continue-on-error: true
      name: Download Istio 1.17.1
      run: 'curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.17.1 sh -

        cd istio-1.17.1

        echo "$PWD/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Install Istio
      run: istioctl install -y --set values.global.proxy.resources.requests.cpu=10m
    - continue-on-error: true
      name: Show K8s cluster information
      run: 'kubectl cluster-info

        kubectl version

        kubectl get pods -n kube-system

        echo "current-context:" $(kubectl config current-context)

        echo "environment-kubeconfig:" ${KUBECONFIG}

        '
    - continue-on-error: true
      uses: actions/cache@v3
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Build Image locally
      run: .github/scripts/build-image-locally-v3.sh mvn clean
    - continue-on-error: true
      name: Start submarine
      run: bash ./.github/scripts/start-submarine.sh
    - continue-on-error: true
      name: Set CLI config for e2e pytest
      run: 'submarine config set connection.hostname localhost

        submarine config set connection.port 8080

        submarine config list

        '
    - continue-on-error: true
      name: Run integration test
      run: pytest -m "e2e" --cov-report xml
      working-directory: ./submarine-sdk/pysubmarine
    - continue-on-error: true
      uses: codecov/codecov-action@v3
      with:
        files: ./submarine-sdk/pysubmarine/coverage.xml
        flags: python-integration
        name: codecov-integration
    - continue-on-error: true
      if: ${{ failure() }}
      name: Failure status
      run: 'kubectl describe nodes

        kubectl get pods

        kubectl -n default get events --sort-by=''{.lastTimestamp}''

        '
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - python-version: '3.8'
          tf-version: 2.14.0
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        tf-version:
        - 2.12.0
        - 2.13.0
        - 2.14.0
    timeout-minutes: 60
  sonarcloud:
    if: github.repository == 'apache/submarine' && github.event_name == 'push' &&
      github.ref == 'refs/heads/master'
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: '-Dsonar.organization=apache -Dsonar.projectKey=apache_submarine_python_sdk
          -Dsonar.python.version=3.8,3.9,3.10,3.11

          '
        projectBaseDir: submarine-sdk/pysubmarine
  unit:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      name: Setup python environment
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - continue-on-error: true
      name: Install requirements
      run: 'pip install --upgrade pip setuptools wheel

        pip install -r ./submarine-sdk/pysubmarine/github-actions/test-requirements.txt

        '
    - continue-on-error: true
      name: Install pysubmarine with tf2 and pytorch
      run: 'sed -i "s/tensorflow>=2.12.0,<2.15.0/tensorflow~=${{ matrix.tf-version
        }}/" ./submarine-sdk/pysubmarine/setup.py

        sed -i "s/tensorflow-estimator>=2.12.0,<2.15.0/tensorflow-estimator~=${{ matrix.tf-version
        }}/" ./submarine-sdk/pysubmarine/setup.py

        pip install --no-cache-dir -e ./submarine-sdk/pysubmarine/.[tf2,pytorch]

        '
    - continue-on-error: true
      name: List installed packages
      run: pip list && pipdeptree
    - continue-on-error: true
      name: Run unit test
      run: pytest -m "not e2e" --cov-report xml
      working-directory: ./submarine-sdk/pysubmarine
    - continue-on-error: true
      uses: codecov/codecov-action@v3
      with:
        files: ./submarine-sdk/pysubmarine/coverage.xml
        flags: python-unit
        name: codecov-unit
    strategy:
      fail-fast: false
      matrix:
        exclude:
        - python-version: '3.8'
          tf-version: 2.14.0
        python-version:
        - '3.8'
        - '3.9'
        - '3.10'
        - '3.11'
        tf-version:
        - 2.12.0
        - 2.13.0
        - 2.14.0
    timeout-minutes: 30
name: python-sdk
on:
  repository_dispatch:
    types: trigger-ga___python.yml
