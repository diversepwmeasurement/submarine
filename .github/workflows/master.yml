env:
  BUILD_FLAG: clean install -ntp -DskipTests -am
  TEST_FLAG: test -DskipRat -ntp
  VERSION: 0.9.0-SNAPSHOT
jobs:
  generate-k8s-versions-array:
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: set-matrix
      run: 'echo "::set-output name=matrix::[\"v1.22.17\", \"v1.23.17\", \"v1.24.12\",
        \"v1.25.3\"]"

        '
  linter:
    name: Check Style
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Setup Golang 1.16.2
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.2
    - continue-on-error: true
      uses: actions/setup-node@v3
      with:
        node-version: '14'
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        go version

        node --version

        '
    - continue-on-error: true
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      if: always()
      name: Java Style
      run: ./dev-support/style-check/lint-java.sh
    - continue-on-error: true
      if: always()
      name: Scala Style
      run: ./dev-support/style-check/lint-scala.sh
    - continue-on-error: true
      if: always()
      name: Angular Style
      run: ./dev-support/style-check/lint-angular.sh
    - continue-on-error: true
      if: always()
      name: Go Style
      run: ./dev-support/style-check/lint-go.sh
    - continue-on-error: true
      if: always()
      name: React Style
      run: 'yarn add prettier@^2.6.2

        yarn checkformat

        '
      working-directory: ./submarine-workbench-v2
    timeout-minutes: 30
  rat:
    name: Check License
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
    - continue-on-error: true
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      run: mvn org.apache.rat:apache-rat-plugin:check
  sonarcloud-and-codecov:
    name: SonarCloud and Codecov
    needs:
    - submarine-e2e
    - submarine-k8s
    - submarine-submitter
    - submarine-server
    - submarine-client
    - submarine-commons-runtime
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - continue-on-error: true
      name: Cache Maven packages
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2
        restore-keys: ${{ runner.os }}-m2
    - continue-on-error: true
      name: Cache test-e2e data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-test/test-e2e/target/jacoco.exec
    - continue-on-error: true
      name: Cache test-k8s data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-test/test-k8s/target/jacoco.exec
    - continue-on-error: true
      name: Cache commons-cluster data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-commons/commons-cluster/target/jacoco.exec
    - continue-on-error: true
      name: Cache commons-runtime data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-commons/commons-runtime/target/jacoco.exec
    - continue-on-error: true
      name: Cache submarine-client data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-client/target/jacoco.exec
    - continue-on-error: true
      name: Cache submarine-server-database data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-database/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submarine-server-core data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-core/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submarine-serve data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-serve/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submarine-submitter data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submarine-submitter-k8s data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/submitter-k8s/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submarine-k8s-agent data
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/submarine-k8s-agent/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        key: ${{ runner.os }}-sonar
        path: ~/.sonar/cache
        restore-keys: ${{ runner.os }}-sonar
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - continue-on-error: true
      name: Build the project with JDK 11
      run: mvn install -DskipTests
    - continue-on-error: true
      name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        path: target/artifacts
    - continue-on-error: true
      name: Calculate combined coverage
      run: ./dev-support/cicd/coverage.sh
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONARCLOUD_TOKEN }}
      if: github.repository == 'apache/submarine' && github.event_name == 'push' &&
        github.ref == 'refs/heads/master'
      name: Build and analyze with JDK 11
      run: mvn -B verify -DskipTests org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
        -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=apache -Dsonar.projectKey=apache_submarine
    - continue-on-error: true
      name: Upload coverage report to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./target/coverage/all.xml
    - continue-on-error: true
      if: always()
      name: Delete temporary build artifacts before caching
      run: '#Never cache local artifacts

        rm -rf ~/.m2/repository/org/apache/submarine

        '
  submarine-client:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Cache jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-client/target/jacoco.exec
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-client
      name: Build
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-client
      name: Test
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    timeout-minutes: 30
  submarine-commons-runtime:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Cache jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-commons/commons-runtime/target/jacoco.exec
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-commons-runtime
      name: Build
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-commons-runtime
      name: Test
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    timeout-minutes: 30
  submarine-e2e:
    runs-on: self-hosted
    services:
      mysql:
        env:
          MYSQL_ROOT_PASSWORD: password
        image: mysql:5.7
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout
          10s --health-retries 10
        ports:
        - 3306:3306
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Cache jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-test/test-e2e/target/jacoco.exec
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        chromedriver --version

        python3 -V

        '
    - continue-on-error: true
      name: Prepare default mysql-data
      run: 'pip install mysql-connector-python

        python3 ./dev-support/database/init-database.py

        '
    - continue-on-error: true
      name: Build with Maven
      run: 'echo ">>> mvn ${BUILD_FLAG} -B"

        mvn ${BUILD_FLAG} -B

        '
    - continue-on-error: true
      env:
        TEST_FLAG: verify -DskipRat -ntp
        TEST_MODULES: -pl :submarine-test-e2e
      name: Test
      run: 'echo ">>> mvn ${TEST_FLAG} ${TEST_MODULES} -B"

        mvn ${TEST_FLAG} ${TEST_MODULES} -B

        '
    timeout-minutes: 60
  submarine-k8s:
    needs: generate-k8s-versions-array
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Free Disk Space
      run: bash ./.github/scripts/free-disk-space.sh
    - continue-on-error: true
      name: Cache jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: ./submarine-test/test-k8s/target/jacoco.exec
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        helm version

        kind version

        '
    - continue-on-error: true
      name: Create kind cluster
      run: kind create cluster --config ./.github/config/kind-config-kind.yaml --wait
        3m --image kindest/node:${{ matrix.k8s-version }}
    - continue-on-error: true
      name: Download Istio 1.17.1
      run: 'curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.17.1 sh -

        cd istio-1.17.1

        echo "$PWD/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Install Istio
      run: istioctl install -y --set values.global.proxy.resources.requests.cpu=10m
    - continue-on-error: true
      name: Show K8s cluster information
      run: 'kubectl cluster-info

        kubectl version

        kubectl get pods -n kube-system

        echo "current-context:" $(kubectl config current-context)

        echo "environment-kubeconfig:" ${KUBECONFIG}

        '
    - continue-on-error: true
      name: Build with Maven
      run: 'echo ">>> mvn ${BUILD_FLAG} -B"

        mvn ${BUILD_FLAG} -B

        '
    - continue-on-error: true
      name: Build Image locally
      run: '.github/scripts/build-image-locally-v3.sh

        sh .github/scripts/build-image-experiment-prehandler.sh

        '
    - continue-on-error: true
      name: Start submarine
      run: bash ./.github/scripts/start-submarine.sh
    - continue-on-error: true
      env:
        TEST_FLAG: verify -DskipRat -ntp
        TEST_MODULES: -pl :submarine-test-k8s
      name: Test
      run: 'echo ">>> mvn ${TEST_FLAG} ${TEST_MODULES} -B"

        mvn ${TEST_FLAG} ${TEST_MODULES} -B

        '
    - continue-on-error: true
      if: ${{ failure() }}
      name: Failure status
      run: 'kubectl describe nodes

        kubectl get pods

        kubectl -n default get events --sort-by=''{.lastTimestamp}''

        '
    - continue-on-error: true
      if: always()
      name: Delete temporary build artifacts before caching
      run: '#Never cache local artifacts

        rm -rf ~/.m2/repository/org/apache/submarine

        '
    strategy:
      fail-fast: false
      matrix:
        k8s-version: ${{fromJson(needs.generate-k8s-versions-array.outputs.matrix)}}
    timeout-minutes: 60
  submarine-operator-v3-e2e-test:
    needs: generate-k8s-versions-array
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 1
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Setup Golang 1.17.2
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.2
    - continue-on-error: true
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        path: ~/.m2/repository
        restore-keys: '${{ runner.os }}-maven-

          '
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        go version

        helm version

        kind version

        '
    - continue-on-error: true
      name: Create kind cluster
      run: kind create cluster --config ./.github/config/kind-config-kind.yaml --wait
        3m --image kindest/node:${{ matrix.k8s-version }}
    - continue-on-error: true
      name: Download Istio 1.17.1
      run: 'curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.17.1 sh -

        cd istio-1.17.1

        echo "$PWD/bin" >> $GITHUB_PATH

        '
    - continue-on-error: true
      name: Install Istio
      run: istioctl install -y --set values.global.proxy.resources.requests.cpu=10m
    - continue-on-error: true
      name: Show K8s cluster information
      run: 'kubectl cluster-info

        kubectl version

        kubectl get pods -n kube-system

        echo "current-context:" $(kubectl config current-context)

        echo "environment-kubeconfig:" ${KUBECONFIG}

        '
    - continue-on-error: true
      name: Build Image locally
      run: '.github/scripts/build-image-locally-v3.sh

        '
    - continue-on-error: true
      name: Install Golang Dependencies
      run: go mod vendor
      working-directory: submarine-cloud-v3
    - continue-on-error: true
      name: Install Submarine operator
      run: 'cd config/manager

        kustomize edit set image controller=apache/submarine:operator-0.9.0-SNAPSHOT

        kustomize build ../default | kubectl apply -f -

        '
      working-directory: submarine-cloud-v3
    - continue-on-error: true
      name: Install Helm Dependencies
      run: 'sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/

        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

        helm dependency update ./helm-charts/submarine

        helm install --wait --set dev=true --set storageClass.provisioner=rancher.io/local-path
        --set storageClass.volumeBindingMode=WaitForFirstConsumer --set seldon-core-operator.istio.gateway=submarine-cloud-v3-system/seldon-gateway
        submarine ./helm-charts/submarine -n submarine-cloud-v3-system

        '
    - continue-on-error: true
      name: Run end-to-end test
      run: go test ./controllers/ -v -ginkgo.v
      working-directory: submarine-cloud-v3
    - continue-on-error: true
      if: ${{ failure() }}
      name: Failure status
      run: 'kubectl describe nodes

        kubectl get all -A

        kubectl get events -A --sort-by=''{.lastTimestamp}''

        kubectl logs -l control-plane=controller-manager -n submarine-cloud-v3-system

        kubectl logs -l app=notebook-controller -n submarine-cloud-v3-system

        kubectl logs -l control-plane=kubeflow-training-operator -n submarine-cloud-v3-system

        kubectl describe submarine -A

        '
    - continue-on-error: true
      if: always()
      name: Delete temporary build artifacts before caching
      run: '#Never cache local artifacts

        rm -rf ~/.m2/repository/org/apache/submarine

        '
    strategy:
      fail-fast: false
      matrix:
        k8s-version: ${{fromJSON(needs.generate-k8s-versions-array.outputs.matrix)}}
    timeout-minutes: 60
  submarine-operator-verify:
    env:
      working-directory: github.com/apache/submarine
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: ${{ env.working-directory }}
    - continue-on-error: true
      name: Setup Golang 1.17.2
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.2
    - continue-on-error: true
      name: Check golang version
      run: go version
      working-directory: ${{ env.working-directory }}/submarine-cloud-v3
    - continue-on-error: true
      name: Install Dependencies
      run: go mod vendor
      working-directory: ${{ env.working-directory }}/submarine-cloud-v3
    - continue-on-error: true
      name: Verify Codegen
      run: ./hack/verify-codegen.sh
      working-directory: ${{ env.working-directory }}/submarine-cloud-v3
    - continue-on-error: true
      name: Verify fmt and vet
      run: make fmt && make vet
      working-directory: ${{ env.working-directory }}/submarine-cloud-v3
    timeout-minutes: 10
  submarine-server:
    runs-on: self-hosted
    services:
      minio:
        env:
          MINIO_ACCESS_KEY: submarine_minio
          MINIO_DEFAULT_BUCKETS: submarine
          MINIO_SECRET_KEY: submarine_minio
        image: bitnami/minio:2022.2.24
        options: --health-cmd "curl http://localhost:9000/minio/health/live" --health-interval
          10s --health-timeout 10s --health-retries 10
        ports:
        - 9000:9000
      mysql:
        env:
          MYSQL_ROOT_PASSWORD: password
        image: mysql:5.7
        options: --health-cmd "mysqladmin ping" --health-interval 10s --health-timeout
          10s --health-retries 10
        ports:
        - 3306:3306
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Cache server-database jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-database/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache server-core jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-core/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache serve jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-serve/target/jacoco.exec

          '
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        '
    - continue-on-error: true
      name: Prepare default mysql-data
      run: 'python3 -V

        sudo apt-get install python3-mysql.connector

        python3 ./dev-support/database/init-database.py

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-server-database
      name: Build submarine-server-database
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-server-database
      name: Test submarine-server-database
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-server-core
      name: Build submarine-server-core
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-server-core
      name: Test submarine-server-core
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        export SUBMARINE_S3_ENDPOINT=http://localhost:9000 && export JDBC_URL="jdbc:mysql://127.0.0.1:3306/submarine_test?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&allowMultiQueries=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=UTC&useTimezone=true&useLegacyDatetimeCode=true"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-serve
      name: Build submarine-serve
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-serve
      name: Test submarine-serve
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    timeout-minutes: 30
  submarine-submitter:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Cache submarine-server jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submitter-k8s jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/submitter-k8s/target/jacoco.exec

          '
    - continue-on-error: true
      name: Cache submitter-k8s-agent jacoco.exec
      uses: actions/cache@v2
      with:
        key: ${{ runner.os }}-docker-${{ github.sha }}
        path: './submarine-server/server-submitter/submarine-k8s-agent/target/jacoco.exec

          '
    - continue-on-error: true
      name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: '11'
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        java -version

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-server-submitter,:submarine-submitter-k8s,:submarine-k8s-agent,:submarine-k8s-utils
      name: Build
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      env:
        TEST_MODULES: -pl :submarine-server-submitter,:submarine-submitter-k8s,:submarine-k8s-agent,:submarine-k8s-utils
      name: Test
      run: 'echo ">>> mvn $TEST_FLAG $TEST_MODULES -B"

        export SUBMARINE_UID="dfea05c4-dbf2-43cc-833c-62ff329566a5"

        mvn $TEST_FLAG $TEST_MODULES -B

        '
    timeout-minutes: 30
  submarine-workbench:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      name: Set up Maven 3.6.3
      uses: stCarolas/setup-maven@v4
      with:
        maven-version: 3.6.3
    - continue-on-error: true
      name: Check version
      run: 'mvn --version

        '
    - continue-on-error: true
      env:
        MODULES: -pl :submarine-workbench-web
      name: Maven Build
      run: 'echo ">>> mvn $BUILD_FLAG $MODULES -B"

        mvn $BUILD_FLAG $MODULES -B

        '
    - continue-on-error: true
      name: Test with chrome
      run: 'export NODE_OPTIONS=--openssl-legacy-provider

        npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI

        '
      working-directory: ./submarine-workbench/workbench-web
    - continue-on-error: true
      name: Test with firefox
      run: 'export NODE_OPTIONS=--openssl-legacy-provider

        npm run test -- --no-watch --no-progress --browsers=FirefoxHeadless

        '
      working-directory: ./submarine-workbench/workbench-web
    timeout-minutes: 30
  submarine-workbench-v2:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v2
      with:
        fetch-depth: 50
    - continue-on-error: true
      uses: actions/setup-node@v3
      with:
        node-version: '14'
    - continue-on-error: true
      name: Check version
      run: node --version
    - continue-on-error: true
      name: Install dependencies
      run: yarn
      working-directory: ./submarine-workbench-v2
    - continue-on-error: true
      name: Run test
      run: yarn test --run --coverage
      working-directory: ./submarine-workbench-v2
    timeout-minutes: 30
name: Submarine
on:
  repository_dispatch:
    types: trigger-ga___master.yml
